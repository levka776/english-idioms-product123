import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Switch } from "@/components/ui/switch";
import { Button } from "@/components/ui/button";
import { motion } from "framer-motion";

const idioms = [
  {
    idiom: "Break the ice",
    translation: "–†–∞—Å—Ç–æ–ø–∏—Ç—å –ª—ë–¥",
    explanation: "–ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –≤ –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω–æ–π –∏–ª–∏ –Ω–µ–∑–Ω–∞–∫–æ–º–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ.",
    example: "He told a joke to break the ice at the meeting.",
    image: "https://images.unsplash.com/photo-icebreaker"
  },
  {
    idiom: "Spill the beans",
    translation: "–í—ã–¥–∞—Ç—å —Å–µ–∫—Ä–µ—Ç",
    explanation: "–°–ª—É—á–∞–π–Ω–æ –∏–ª–∏ –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–µ–∫—Ä–µ—Ç.",
    example: "She spilled the beans about the surprise party.",
    image: "https://images.unsplash.com/photo-beans"
  },
  {
    idiom: "Hit the sack",
    translation: "–õ–µ—á—å —Å–ø–∞—Ç—å",
    explanation: "–ü–æ–π—Ç–∏ —Å–ø–∞—Ç—å.",
    example: "I'm really tired, I'm going to hit the sack.",
    image: "https://images.unsplash.com/photo-bed"
  },
  {
    idiom: "Costs an arm and a leg",
    translation: "–û—á–µ–Ω—å –¥–æ—Ä–æ–≥–æ",
    explanation: "–°—Ç–æ–∏—Ç—å —Ü–µ–ª–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.",
    example: "That new phone costs an arm and a leg!",
    image: "https://images.unsplash.com/photo-money"
  },
  {
    idiom: "Under the weather",
    translation: "–ù–µ–≤–∞–∂–Ω–æ —Å–µ–±—è —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å",
    explanation: "–ë—ã—Ç—å –±–æ–ª—å–Ω—ã–º –∏–ª–∏ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–µ–¥–æ–º–æ–≥–∞–Ω–∏–µ.",
    example: "I'm feeling a bit under the weather today.",
    image: "https://images.unsplash.com/photo-sick"
  },
  {
    idiom: "Let the cat out of the bag",
    translation: "–í—ã–¥–∞—Ç—å —Å–µ–∫—Ä–µ—Ç",
    explanation: "–°–ª—É—á–∞–π–Ω–æ —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–∞–π–Ω—É.",
    example: "He let the cat out of the bag about the gift.",
    image: "https://images.unsplash.com/photo-cat"
  },
  {
    idiom: "Bite the bullet",
    translation: "–°—Ç–∏—Å–Ω—É—Ç—å –∑—É–±—ã",
    explanation: "–ú—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤—ã–¥–µ—Ä–∂–∞—Ç—å —Ç—Ä—É–¥–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é.",
    example: "He had to bite the bullet and admit his mistake.",
    image: "https://images.unsplash.com/photo-bullet"
  },
  {
    idiom: "Hit the nail on the head",
    translation: "–ü–æ–ø–∞—Å—Ç—å –≤ —Ç–æ—á–∫—É",
    explanation: "–¢–æ—á–Ω–æ –æ–ø–∏—Å–∞—Ç—å –∏–ª–∏ –ø–æ–Ω—è—Ç—å —á—Ç–æ-—Ç–æ.",
    example: "You really hit the nail on the head with that comment.",
    image: "https://images.unsplash.com/photo-hammer"
  },
  {
    idiom: "Kick the bucket",
    translation: "–û—Ç–±—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—å–∫–∏",
    explanation: "–£–º–µ—Ä–µ—Ç—å (—Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —Å—Ç–∏–ª—å).",
    example: "He kicked the bucket peacefully in his sleep.",
    image: "https://images.unsplash.com/photo-bucket"
  },
  {
    idiom: "Piece of cake",
    translation: "–ü—Ä–æ—â–µ –ø—Ä–æ—Å—Ç–æ–≥–æ",
    explanation: "–û—á–µ–Ω—å –ª–µ–≥–∫–æ.",
    example: "The test was a piece of cake.",
    image: "https://images.unsplash.com/photo-cake"
  }
];

export default function IdiomsPage() {
  const [darkMode, setDarkMode] = useState(true);

  const bg = darkMode ? "bg-gray-900 text-gray-100" : "bg-white text-gray-900";
  const cardBg = darkMode ? "bg-gray-800 border-gray-700" : "bg-gray-100 border-gray-300";
  const textSecondary = darkMode ? "text-gray-300" : "text-gray-700";
  const textTertiary = darkMode ? "text-gray-400" : "text-gray-500";

  const shareSite = async () => {
    try {
      await navigator.share({
        title: "–ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –ò–¥–∏–æ–º—ã",
        text: "–ü–æ—Å–º–æ—Ç—Ä–∏ —Å–∞–π—Ç —Å –∏–¥–∏–æ–º–∞–º–∏!",
        url: window.location.href
      });
    } catch (err) {
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è: " + err);
    }
  };

  return (
    <div className={`${bg} min-h-screen p-4 sm:p-8 transition-colors duration-300 relative`}>
      <div className="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
        <h1 className="text-3xl sm:text-4xl font-bold text-center w-full">–ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –ò–¥–∏–æ–º—ã –∏ –†—É—Å—Å–∫–∏–µ –ê–Ω–∞–ª–æ–≥–∏</h1>
        <div className="flex items-center gap-2">
          <span className="text-sm">üåû</span>
          <Switch checked={darkMode} onCheckedChange={setDarkMode} />
          <span className="text-sm">üåô</span>
        </div>
      </div>

      <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-6">
        <Button
          onClick={() => {
            const siteURL = window.location.href;
            window.open(`https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(siteURL)}`, '_blank');
          }}
          className="bg-blue-500 hover:bg-blue-600 text-white w-full sm:w-auto"
        >
          üîó –°–æ–∑–¥–∞—Ç—å QR-–∫–æ–¥ –¥–ª—è —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞
        </Button>
        <Button
          onClick={shareSite}
          className="bg-green-500 hover:bg-green-600 text-white w-full sm:w-auto"
        >
          üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
        </Button>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {idioms.map((item, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.3, delay: index * 0.1 }}
          >
            <Card className={`${cardBg} shadow-xl rounded-2xl transition-all`}>
              <img src={item.image} alt={item.idiom} className="w-full h-48 object-cover rounded-t-2xl" />
              <CardContent className="p-4">
                <h2 className="text-xl font-semibold mb-2">{item.idiom}</h2>
                <Badge variant="secondary" className="mb-2">{item.translation}</Badge>
                <p className={`mb-2 text-sm ${textSecondary}`}>{item.explanation}</p>
                <p className={`italic text-sm ${textTertiary}`}>Example: "{item.example}"</p>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </div>

      <div className="mt-12 text-center text-xs text-gray-500">
        Created by <span className="font-semibold">Andrey Bogdanov</span>
      </div>
    </div>
  );
}
